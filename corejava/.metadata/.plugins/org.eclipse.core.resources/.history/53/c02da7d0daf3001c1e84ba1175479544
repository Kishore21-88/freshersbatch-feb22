package corejava.assignment.lamda;

import java.util.ArrayList;
@FunctionalInterface
interface Price{
	double greater(double a,double b);
}




public class Orders {
	private double price;
	private String status;

	public Orders() {
		super();
		
	}
	

	public Orders(double price, String status) {
		super();
		this.price = price;
		this.status = status;
	}


	public double getPrice() {
		return price;
	}


	public void setPrice(double price) {
		this.price = price;
	}


	public String getStatus() {
		return status;
	}


	public void setStatus(String status) {
		this.status = status;
	}


	@Override
	public String toString() {
		return "Order [price=" + price + ", status=" + status + "]";
	}


	public static void main(String[] args) {
		ArrayList<Orders> a=new ArrayList<Orders>();
		a.add(new Orders(12000,"Accepted"));
		a.add(new Orders(1000,"Completed"));
		a.add(new Orders(22000,"Rejected"));
		a.add(new Orders(2000,"Completed"));
		a.add(new Orders(12000,"Accepted"));
		
		Price p=(a1,b1)->a1>b1?a1:0;
		for (int index = 0; index < a.size(); index++) {
			double result = p.greater(a.get(index).getPrice(), 10000);
			System.out.println(result);
		}
		

}
} 
